mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
warnings()
test_grid_mstl
cycle1 <- seq(10*30, 14*30, 30)
cycle2 <- seq(18*30,36*30, 30)
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = NA)
for(i in 1:nrow(test_grid_mstl)){
ts_mstl <- msts(data_flu[[1]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2010)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
warnings()
i = 1
ts_mstl <- msts(data_flu[[1]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2010)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = as.numeric(NA))
for(i in 1:nrow(test_grid_mstl)){
ts_mstl <- msts(data_flu[[1]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2010)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
warnings()
test_grid_mstl
cycle1 <- seq(10*30, 14*30, 30)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(ll = as.numeric(NA))
cycle1 <- seq(10*30, 14*30, 30)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(ll = as.numeric(NA),
cycle2 = NA)
test_grid_mstl %>%
bind_rows(test_grid_stl)
test_grid_mstl %>%
mutate(model = "mstl")
bind_rows(test_grid_stl %>%
model = "stl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) %>%
ggplot(., aes(x = ll, group = model)) +
geom_density()
bind_rows(test_grid_stl %>%
mutate(model = "stl")) %>%
ggplot(., aes(x = ll, group = model)) +
geom_density(stat = "density")
bind_rows(test_grid_stl %>%
mutate(model = "stl")) %>%
ggplot(., aes(x = ll)) +
geom_density()
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
res
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
res
res %>%
ggplot(., aes(x = ll)) +
geom_density()
res %>%
ggplot(., aes(x = ll, color = model, source = model)) +
geom_density()
res %>%
ggplot(., aes(x = ll, color = model, fill = model)) +
geom_density()
res$model
test_grid_stl
i = 1
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T))
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll)
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(ll = as.numeric(NA),
cycle2 = NA)
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_stl
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(cycle2 = NA,
ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
res
res %>%
ggplot(., aes(x = ll, color = model, fill = model)) +
geom_density()
res
cycle1 <- seq(10*30, 14*30, 30)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(cycle2 = 0,
ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
ycle1 <- seq(10*30, 14*30, 30)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(cycle2 = 0,
ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
res
res %>%
ggplot(., aes(x = cycle1,
y = cycle2,
fill = ll)) +
geom_tile() +
facet_wrap(~model)
res %>%
ggplot(., aes(x = cycle1,
y = cycle2,
fill = ll)) +
geom_tile() +
facet_wrap(~model, scales = "free")
res %>%
dplyr::filter(cycle1 == 360)
test_grid_mstl
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density()
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle``)
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle``)
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1)
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1) +
geom_vline(data = test_grid_stl,
aes(xintercelt = ll),
color = "red")
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1) +
geom_vline(data = test_grid_stl,
aes(xintercept = ll),
color = "red")
data_flu[[2]]
dpois(15,10,log = T)
156*30
156*7
156*7/30
test_grid_mstl
test_grid_mstl
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1) +
geom_vline(data = test_grid_stl,
aes(xintercept = ll),
color = "red")
#### LIU, Lanzhou, Flu ####
data_flu$`Liu-2022-Lanzhou.csv`
#### LIU, Lanzhou, Flu ####
data_flu$`Liu-2022-Lanzhou.csv` %>%
ggplot(., aes(x = X1, y = X2)) +
geom_point()
#### LIU, Lanzhou, Flu ####
cycle1 <- seq(10*4, 14*4, 4)
cycle2 <- seq(18*4,36*4, 4)
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = as.numeric(NA))
test_grid_mstl
#### LIU, Lanzhou, Flu ####
cycle1 <- seq(10*4, 14*4, 4)
cycle2 <- seq(18*4,36*4, 4)
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = as.numeric(NA))
for(i in 1:nrow(test_grid_mstl)){
ts_mstl <- msts(data_flu[[2]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2016)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
260i
i
msts(data_flu[[2]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2016)
ts_mstl <- msts(data_flu[[2]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2016)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
model_mstl
36*4
#### LIU, Lanzhou, Flu ####
cycle1 <- seq(10*4, 14*4, 4)
cycle2 <- seq(18*4,32*4, 4)
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = as.numeric(NA))
for(i in 1:nrow(test_grid_mstl)){
ts_mstl <- msts(data_flu[[2]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2016)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
cycle1 <- seq(10*4, 14*4, 4)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(cycle2 = 0,
ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[2]]$X2, frequency = test_grid_stl$cycle1[i], start = 2016)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
ts_stl <- ts(data_flu[[2]]$X2, frequency = test_grid_stl$cycle1[i], start = 2016)
model_stl <- stl(ts_stl, s.window = "periodic")
test_grid_stl
i = 4
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder)
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll)
i = 4
ts_stl <- ts(data_flu[[2]]$X2, frequency = test_grid_stl$cycle1[i], start = 2016)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>% View()
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[2]]$X2, frequency = test_grid_stl$cycle1[i], start = 2016)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder,
predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1) +
geom_vline(data = test_grid_stl,
aes(xintercept = ll),
color = "red")
res
res %>%
dplyr::filter(cycle1 == 54)
res %>%
dplyr::filter(cycle1 == 52)
test_grid_mstl
test_grid_mstl %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll)) +
geom_tile()
test_grid_mstl %>%
mutate(rank = rank(ll))
test_grid_mstl %>%
mutate(rank = rank(-ll))
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10)
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile()
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 10)
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 5)
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 2)
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 0.5)
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 0.5) +
scale_color_manual(values = c("black", "red"))
#### CHEN, Xi'an, Flu ####
cycle1 <- seq(10*30, 14*30, 30)
cycle2 <- seq(18*30,36*30, 30)
test_grid_mstl <- CJ(cycle1 = cycle1,
cycle2 = cycle2) %>%
mutate(ll = as.numeric(NA))
for(i in 1:nrow(test_grid_mstl)){
ts_mstl <- msts(data_flu[[1]]$X2, seasonal.periods = unlist(test_grid_mstl[i,1:2]), start = 2010)
model_mstl <- mstl(ts_mstl)
model_mstl %>%
data.table %>%
mutate(predicted = Trend + get((paste0("Seasonal", test_grid_mstl$cycle1[i]))) + get((paste0("Seasonal",test_grid_mstl$cycle2[i])))) %>%
rename(observed = Data) %>%
mutate(predicted = if_else(predicted < 0, 0.01, predicted)) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_mstl[i,"ll"]
}
cycle1 <- seq(10*30, 14*30, 30)
test_grid_stl <- CJ(cycle1 = cycle1) %>%
mutate(cycle2 = 0,
ll = as.numeric(NA))
for(i in 1:nrow(test_grid_stl)){
ts_stl <- ts(data_flu[[1]]$X2, frequency = test_grid_stl$cycle1[i], start = 2010)
model_stl <- stl(ts_stl, s.window = "periodic")
model_stl$time.series %>%
data.table %>%
mutate(predicted = seasonal + trend,
observed = seasonal + trend + remainder) %>%
mutate(ll = dpois(round(observed),  predicted, log = T)) %>%
pull(ll) %>%
sum -> test_grid_stl[i,"ll"]
}
test_grid_mstl %>%
mutate(model = "mstl") %>%
bind_rows(test_grid_stl %>%
mutate(model = "stl")) -> res
test_grid_mstl %>%
ggplot(., aes(x = ll)) +
geom_density() +
facet_wrap(~cycle1) +
geom_vline(data = test_grid_stl,
aes(xintercept = ll),
color = "red")
test_grid_mstl %>%
mutate(rank = rank(-ll),
flag = rank <= 10) %>%
ggplot(., aes(x = cycle1, y = cycle2, fill = ll, color = flag)) +
geom_tile(size = 0.5) +
scale_color_manual(values = c("black", "red"))
dpois(10, 15, log = T)
dpois(10, 20, log = T)
dpois(10, 200, log = T)
